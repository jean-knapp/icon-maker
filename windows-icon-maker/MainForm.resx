<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>